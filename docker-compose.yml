services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
    depends_on:
      db: # 'db' 서비스에 대한 의존성 설정
        condition: service_healthy # db 서비스가 healthy 상태가 될 때까지 기다립니다.
    environment:
      - TZ=Asia/Seoul
      - DATABASE_URL=postgresql://user:password@db/newsdb
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src
    stdin_open: true
    tty: true
    depends_on:
      - backend
    environment:
      - TZ=Asia/Seoul

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck: # --- DB 준비 상태 확인 ---
      test: ["CMD-SHELL", "pg_isready -U user -d newsdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=newsdb
    ports:
      - "5432:5432"

volumes:
  postgres_data:
